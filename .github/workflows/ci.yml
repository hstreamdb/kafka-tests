name: Kafka Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        distribution: [ "adopt" ]
        java-version: [ 11 ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: "gradle"

      - uses: gradle/wrapper-validation-action@v1

      - name: check Java code format
        run: |
          ./gradlew spotlessJavaCheck
          ./gradlew spotlessGroovyGradleCheck

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  java-test:
    needs: pre-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        distribution: ["adopt"]
        java-version: [11]
        test_class:
          - io.hstream.kafka.testing.ConsumerTest
          - io.hstream.kafka.testing.RawConsumerTest
          - io.hstream.kafka.testing.ProducerTest
          - io.hstream.kafka.testing.TopicTest
        include:
          - test_class: io.hstream.kafka.testing.ConsumerTest
            name: "ConsumerTest"
          - test_class: io.hstream.kafka.testing.RawConsumerTest
            name: "RawConsumerTest"
          - test_class: io.hstream.kafka.testing.ProducerTest
            name: "ProducerTest"
          - test_class: io.hstream.kafka.testing.TopicTest
            name: "TopicTest"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: "gradle"

      - name: Run test class
        run: |
          echo "${{ matrix.test_class }}" | tr -d '\n' | xargs -d ',' -n1 ./gradlew test -i --tests

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: ${{ matrix.name }}-logs-artifact
          path: |
            .logs
            app/build/reports
